define("ngParse",[],function(){var u=/^module:([^:]*)(:(.*))?$/,l=/^ng/;return{parseNgModule:function(e,n){var i=[],t=[];return function e(n,o,r){var i;if(n)if(function(e){return"function"==typeof e}(n))for(i in n)"prototype"!=i&&"length"!=i&&"name"!=i&&n.hasOwnProperty(i)&&o.call(r,n[i],i);else if(n.forEach&&n.forEach!==e)n.forEach(o,r);else if(isArrayLike(n))for(i=0;i<n.length;i++)o.call(r,n[i],i);else for(i in n)n.hasOwnProperty(i)&&o.call(r,n[i],i);return n}(n,function(e){var n=e.match(u);if(n){var o=n[1],r=n[3];r||function(e){return l.test(e)}(o)||(r=function(e){return e.replace(/\./g,"/")}(o)),t.push(o),r&&i.push(r)}else i.push(e)}),{name:e,fileDependencies:i,moduleDependencies:t}}}}),function(s){define("ngDefine",["angular","ngParse"],function(r,f){function d(e){return Array.prototype.slice.call(e,0)}function n(e,n,o){if(!n)throw new Error("wrong number of arguments, expected name[, dependencies], body");!function(e,n,o,r){r||(r=o,o=null);var i,t,u=f.parseNgModule(n,o||[]),l=u.moduleDependencies,a=u.fileDependencies;try{e.module(n),t=!0}catch(e){t=!1}if(l.length&&t)throw new Error("Cannot re-define angular module "+n+" with new dependencies ["+l+"]. Make sure the module is not defined else where or define a sub-module with additional angular module dependencies instead.");l.length||!t?(i=e.module(n,l),c(n,"defined with dependencies",l)):(i=e.module(n),c(n,"looked up")),define(a,function(){var e=d(arguments);return e.unshift(i),r.apply(s,e),c(n,"loaded"),i})}(r,e,n,o)}s.ngDefine||(s.ngDefine=n);var o,c=(Function.prototype.bind&&s.console&&s.console.log&&(o=Function.prototype.bind.call(s.console.log,s.console)),function(){if(n.debug&&o){var e=d(arguments);e.unshift("[ngDefine]"),o.apply(o,e)}});return n})}(window);