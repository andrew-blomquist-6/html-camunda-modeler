var $=window.jQuery=window.$=require("jquery");window.__define("camunda-tasklist-bootstrap",["./scripts/camunda-tasklist-ui"],function(){"use strict";var s=window.CamundaTasklistUi;requirejs.config({baseUrl:"../../../lib"});var t=window;s.exposePackages(t),window.define=window.__define,window.require=window.__require,requirejs(["globalize"],function(i){i(requirejs,["angular","camunda-commons-ui","camunda-bpm-sdk-js","jquery","angular-data-depend"],t);var e=window.PLUGIN_PACKAGES||[],a=window.PLUGIN_DEPENDENCIES||[];e.forEach(function(i){var e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href",i.location+"/plugin.css"),document.head.appendChild(e)}),requirejs.config({packages:e,baseUrl:"../",paths:{ngDefine:"../../lib/ngDefine"}});var n=["angular","ngDefine"].concat(a.map(function(i){return i.requirePackageName}));requirejs(n,function(i){if(void 0!==window.camTasklistConf&&window.camTasklistConf.customScripts){var e=window.camTasklistConf.customScripts||{},n={};["baseUrl","paths","bundles","shim","map","config","packages","waitSeconds","context","callback","enforceDefine","xhtml","urlArgs","scriptType"].forEach(function(i){e[i]&&(n[i]=e[i])}),requirejs.config(n),requirejs(e.deps||[],function(){i.module("cam.tasklist.custom",e.ngDeps),window.define=void 0,window.require=void 0,s(a)})}else i.module("cam.tasklist.custom",[]),require([],function(){window.define=void 0,window.require=void 0,s(a)})})});var i=function(){for(var i=$("base"),e={},n=["href","app-root","admin-api","tasklist-api","engine-api"],a=0;a<n.length;a++)e[n[a]]=i.attr(n[a]);return e}();if(void 0!==window.tasklistConf&&window.tasklistConf.polyfills&&-1<window.tasklistConf.polyfills.indexOf("placeholder")){var e=window.requirejs,n=i["app-root"];e([n+"/app/tasklist/scripts/placeholders.utils.js",n+"/app/tasklist/scripts/placeholders.main.js"],function(){e([n+"/app/tasklist/scripts/placeholders.jquery.js"],function(){})})}}),requirejs(["camunda-tasklist-bootstrap"],function(){});